v0.0.1 - First Version. Decomposes character into two components.
v0.0.2 - Now checks if character is a radical first, if not, then decomposes it into two radicals.
v0.0.3 - If it detects a number it now recursively decomposes until no number is reached. Experimental at this stage.
v0.0.4/v0.1.0 - Changed the versioning to allow for hotfixes. Added a lot new functions, including better decomposition system allowing three levels deep decomposition.
v0.2.0 - Added dictionarySearch, decomposeMany and getExampleWords functions. Most of the code was also refactored by djuretic. Thanks!
v0.2.1 - Changed Leiden University's Sina Weibo Word Frequency corpus data to be a lot simpler and less bulky. Saves a lot more on data transfer. File now a lot smaller.
v0.2.2 - Updated dictionary to return an object rather than an array (djuretic). Also updated getExamples function to return objects to display both traditional and simplified characters. Also a determineIfSimplified function.
v0.2.3 - Changed the radical list into a js array. Also added messy input handling for decomposition.
v0.2.4 - Decompositions are now in a flat array and not embedded. Furthermore, character decomposition is now read as an object. Also fixed some characters with data.
v0.2.5 - Added a function to check if component exists.
v0.2.6 - Added a getRadicalMeaning function and adapted the radicalList file to an object to add the extra info.
v0.2.7 - Added better handling of numbers in the data. Level 1 & 2 replaces the numbers with a string and in level 3 it resolves all numbers.
v0.3.0 - Added determinePhoneticRegularity function
v0.3.1 - Bug fix to determinePhoneticRegularity function
v0.3.2 - Added phonetic set data generated from using the determinePhoneticRegularity function. Also added getPhoneticSet function.
v0.3.3 - Added a function to retrieve character frequency data from Junda corpus.
v0.3.4 - Update Junda Corpus Data
v0.4.0 - Added new function: getCharactersWithComponent
v0.4.1 - Bug fix to way the characterswithcomponent object was compiled.
v0.4.2 - Fix è€‚ encoding error
v0.5.0 - Add Longest Match segment function thanks to nikdvp! Browserify builds now also function properly using brfs.
v0.5.1 - Add licence information to package.json. Thanks zurawiki!
v0.6.0 - Fix frequency info for some traditional characters. Traditional characters now default to using the simplified list. Thanks raylillywhite!
v0.7.0 - Add a new function getCharacterInFrequencyListByPosition which grabs a character in the frequency list.
v1.0.0 - Changes which frequency data we use. A new list removes the traditional variants of simplified characters. Meaning some characters from a frequency perspective were in there twice which caused odd side-effects.
v1.1.0 - Bug fix for getCharacterFrequency, where characters with no simplified variant in the list returned empty.
v2.0.0 - Lots of changes under the hood thanks to zurawiki. Now compatible with webpack + better testing environment.
v2.1.0 - React-native under the hood fix. Thanks to zurawiki.